<?php
//создаём генератор
    function test($from, $to) {
        for ($i = $from; $i < $to; $i++) {
            $cmd = yield $i;
            if ($cmd == -1) return 'Stop'; // если рез.вернёт -1 то вых.из функ. // далее п.21
        }
        return $to - $from; // выводит вычитание getreturn в п.26 (5-1) echo 4 
    }
    // итератор $t является объектом generator
    $t = test(1, 5); //некая переменная от 1 до 5
    print_r($t); // echo Generator Object ( ) 
    echo '<br />';
    //1 метод вывода:
    //foreach ($t as $v) echo $v.'; '; // перебираем  генератор
    echo '<br />';// echo 1; 2; 3; 4;
    // т.к. $t - генератор явл.объектом и итератором у него есть свои методы:
    // 2 способ вывода  перебора с помощью отдельных методов:
    while ($t->valid()) { // метод проверяет сущ.ли такой эл. если нет- false 
        echo $t->current().'; '; // метод выводит тек.значение
        // с помощью send можно отправить и записать в $cmd данные через оператор yield. через yield можно отправлять данные и забирать их
        if ($t->current() == 2) $t->send(-1); // если текущее= 2 (мы будем выводить 1 и 2) то отправляем в итератор знач.-1 т.е. значен. попадает в $cmd п.6 и выход из итератора // echo 1; 2;  т.е. 1 и 2 вывелиси далее -1 попадает в пер.cmd записывается в п.5 и далее -выход
        $t->next(); // переход к след.эл.
        // особенность этого генератора в том, что его неьзя обнулить методом rewind. чтобы цикл while вывелся нужно убрать 1 перебор п.14
    }
    echo '<br />';
    echo $t->getReturn(); // echo Stop из п.6 получаем возвращённое значение 
?>