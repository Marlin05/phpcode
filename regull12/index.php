<?php
  $str = "Небольшая <b>строка</b> c <b>жирным</b> выделением.";
  $result_str = preg_replace("/<b>.*?<\/b>/i", "здесь_жирное_выделение", $str);
  echo $result_str;
  //  "Небольшая здесь_жирное_выделение c здесь_жирное_выделение выделением
?>


<?php

// функция preg_match возвращает либо 0 либо 1, false в случае возникновения ошибки
    $reg = '/a . b/'; // 1 любой символ
    $str = 'a . b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/^ab/'; // чтобы символы начинались с этой последовательности
    $str = 'aba';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/ab$/';// на аb строка заканчивается
    $str = 'abaaaab';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a [a-z][0-5] b$/'; // всё что попадает в эти интервалы 
    $str = 'a c5 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a [^a-z] b$/'; // всё, кроме символов из этого интервала
    $str = 'a 6 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a ([a-z]a\d) (b)$/'; //группирует символы. можно выводить в массиве $matches
    $str = 'a aa5 b';
    echo preg_match($reg, $str, $matches).'<br />';
    print_r($matches);
    echo '<br />';
    
    $reg = '/a ([a-z]a)* b$/'; //* знак повторения --квантификатор. если рядом скобки-то повторяется все, что в скобках. если без - то предыдущий символ или спецсимвол. если ничего не будет - то вернёт 1 т.е. 0 раз повторяет.
    //* не требует повторять обязательно как +
    $str = 'a  b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a ([a-z]a)+ b$/';//повторение хотя бы 1 раз
    $str = 'a aa b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a a? b$/'; // ? cоответствие возникнет, если предыдущего символа вообще не было, либо он был только один раз. Либо 0 раз повторения либо 1 раз.или может быть группирующая скобка должна повторяться 1 раз '/a (aaaa)? b$/';  в остальных- false
    $str = 'a a b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a \d{3} b$/'; // предыдущая скобка или символ должен повториться указанное число раз
    $str = 'a 539 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a \d{3,} b$/'; //более ослабленная - от указанного числа раз повторение
    $str = 'a 5933 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a \d{3,5} b$/'; // повторение от и  до т.е. от 3 до 5 раз
    $str = 'a 59999 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a \d{3,5} b$/i'; // модификатор i игнорирует заглавный регистор
    $str = 'A 59999 b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/a\s\d{3,5} b$/ix'; // мод игнорирует все пробелы
    $str = 'A 59999b';
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/ab$/m'; //мод m учитывает переход на новую строку как символ
    $str = "ab\nddd";
    echo preg_match($reg, $str).'<br />';
    
    $reg = '/"(.*?)"/m';
    $str = 'abc "23" abc "45"';
    echo preg_match_all($reg, $str, $matches).'<br />';
    print_r($matches);
?>